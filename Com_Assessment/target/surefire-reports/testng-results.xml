<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-18T16:24:24Z" name="Suite" finished-at="2021-11-18T16:28:06Z" duration-ms="221796">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-11-18T16:24:24Z" name="Test" finished-at="2021-11-18T16:28:06Z" duration-ms="221796">
      <class name="runner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:54:24Z" name="setUpClass" finished-at="2021-11-18T21:54:25Z" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@593a6726]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:54:25Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:54:44Z" duration-ms="19321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Validating"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:54:44Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:55:07Z" duration-ms="23262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Test Validating"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:55:08Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:55:43Z" duration-ms="35462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Searching"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:55:43Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:56:05Z" duration-ms="22152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["pincode checking"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:56:06Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:56:24Z" duration-ms="18379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Wish List"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:56:24Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:56:47Z" duration-ms="22945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Marvel Links"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:56:47Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:57:00Z" duration-ms="12856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["footer"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:57:00Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:57:40Z" duration-ms="39759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Top50"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:57:40Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-18T21:57:53Z" duration-ms="13027" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["MouseHover"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Testing Bigsmall]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=95.0.4638.69)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-RO9OBKAQ', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 94.0.4606.41 (333e85df3c9b6..., userDataDir: C:\Users\malla\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:60487}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 750225faabb2d1b34dc223a917f1275d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=95.0.4638.69)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-RO9OBKAQ', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 94.0.4606.41 (333e85df3c9b6..., userDataDir: C:\Users\malla\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:60487}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 750225faabb2d1b34dc223a917f1275d
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
	at StepDefinations.StepDefination.choose_shopbycategory_and_click_travel_acccessories(StepDefination.java:210)
	at ✽.choose ShopbyCategory and click Travel Acccessories(file:///D:/Selenium/BDD/FinalBDD/src/test/java/Features/TestCase.feature:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestRunner@7582ff54]" started-at="2021-11-18T21:58:06Z" name="tearDownClass" finished-at="2021-11-18T21:58:06Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
